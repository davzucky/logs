# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 2.8

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list

# Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /root/git/coreclr

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /root/git/coreclr/bin/obj/Linux.x64.Debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running interactive CMake command-line interface..."
	/usr/bin/cmake -i .
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: install/local
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: install/strip
.PHONY : install/strip/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(CMAKE_COMMAND) -E cmake_progress_start /root/git/coreclr/bin/obj/Linux.x64.Debug/CMakeFiles /root/git/coreclr/bin/obj/Linux.x64.Debug/src/classlibnative/bcltype/CMakeFiles/progress.marks
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/classlibnative/bcltype/all
	$(CMAKE_COMMAND) -E cmake_progress_start /root/git/coreclr/bin/obj/Linux.x64.Debug/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/classlibnative/bcltype/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/classlibnative/bcltype/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/classlibnative/bcltype/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
src/classlibnative/bcltype/CMakeFiles/bcltype.dir/rule:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/classlibnative/bcltype/CMakeFiles/bcltype.dir/rule
.PHONY : src/classlibnative/bcltype/CMakeFiles/bcltype.dir/rule

# Convenience name for target.
bcltype: src/classlibnative/bcltype/CMakeFiles/bcltype.dir/rule
.PHONY : bcltype

# fast build rule for target.
bcltype/fast:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build
.PHONY : bcltype/fast

__/__/__/version.o: __/__/__/version.cpp.o
.PHONY : __/__/__/version.o

# target to build an object file
__/__/__/version.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/__/__/__/version.cpp.o
.PHONY : __/__/__/version.cpp.o

__/__/__/version.i: __/__/__/version.cpp.i
.PHONY : __/__/__/version.i

# target to preprocess a source file
__/__/__/version.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/__/__/__/version.cpp.i
.PHONY : __/__/__/version.cpp.i

__/__/__/version.s: __/__/__/version.cpp.s
.PHONY : __/__/__/version.s

# target to generate assembly for a file
__/__/__/version.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/__/__/__/version.cpp.s
.PHONY : __/__/__/version.cpp.s

arrayhelpers.o: arrayhelpers.cpp.o
.PHONY : arrayhelpers.o

# target to build an object file
arrayhelpers.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/arrayhelpers.cpp.o
.PHONY : arrayhelpers.cpp.o

arrayhelpers.i: arrayhelpers.cpp.i
.PHONY : arrayhelpers.i

# target to preprocess a source file
arrayhelpers.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/arrayhelpers.cpp.i
.PHONY : arrayhelpers.cpp.i

arrayhelpers.s: arrayhelpers.cpp.s
.PHONY : arrayhelpers.s

# target to generate assembly for a file
arrayhelpers.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/arrayhelpers.cpp.s
.PHONY : arrayhelpers.cpp.s

arraynative.o: arraynative.cpp.o
.PHONY : arraynative.o

# target to build an object file
arraynative.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/arraynative.cpp.o
.PHONY : arraynative.cpp.o

arraynative.i: arraynative.cpp.i
.PHONY : arraynative.i

# target to preprocess a source file
arraynative.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/arraynative.cpp.i
.PHONY : arraynative.cpp.i

arraynative.s: arraynative.cpp.s
.PHONY : arraynative.s

# target to generate assembly for a file
arraynative.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/arraynative.cpp.s
.PHONY : arraynative.cpp.s

console.o: console.cpp.o
.PHONY : console.o

# target to build an object file
console.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/console.cpp.o
.PHONY : console.cpp.o

console.i: console.cpp.i
.PHONY : console.i

# target to preprocess a source file
console.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/console.cpp.i
.PHONY : console.cpp.i

console.s: console.cpp.s
.PHONY : console.s

# target to generate assembly for a file
console.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/console.cpp.s
.PHONY : console.cpp.s

currency.o: currency.cpp.o
.PHONY : currency.o

# target to build an object file
currency.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/currency.cpp.o
.PHONY : currency.cpp.o

currency.i: currency.cpp.i
.PHONY : currency.i

# target to preprocess a source file
currency.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/currency.cpp.i
.PHONY : currency.cpp.i

currency.s: currency.cpp.s
.PHONY : currency.s

# target to generate assembly for a file
currency.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/currency.cpp.s
.PHONY : currency.cpp.s

decimal.o: decimal.cpp.o
.PHONY : decimal.o

# target to build an object file
decimal.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/decimal.cpp.o
.PHONY : decimal.cpp.o

decimal.i: decimal.cpp.i
.PHONY : decimal.i

# target to preprocess a source file
decimal.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/decimal.cpp.i
.PHONY : decimal.cpp.i

decimal.s: decimal.cpp.s
.PHONY : decimal.s

# target to generate assembly for a file
decimal.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/decimal.cpp.s
.PHONY : decimal.cpp.s

number.o: number.cpp.o
.PHONY : number.o

# target to build an object file
number.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/number.cpp.o
.PHONY : number.cpp.o

number.i: number.cpp.i
.PHONY : number.i

# target to preprocess a source file
number.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/number.cpp.i
.PHONY : number.cpp.i

number.s: number.cpp.s
.PHONY : number.s

# target to generate assembly for a file
number.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/number.cpp.s
.PHONY : number.cpp.s

oavariant.o: oavariant.cpp.o
.PHONY : oavariant.o

# target to build an object file
oavariant.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/oavariant.cpp.o
.PHONY : oavariant.cpp.o

oavariant.i: oavariant.cpp.i
.PHONY : oavariant.i

# target to preprocess a source file
oavariant.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/oavariant.cpp.i
.PHONY : oavariant.cpp.i

oavariant.s: oavariant.cpp.s
.PHONY : oavariant.s

# target to generate assembly for a file
oavariant.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/oavariant.cpp.s
.PHONY : oavariant.cpp.s

objectnative.o: objectnative.cpp.o
.PHONY : objectnative.o

# target to build an object file
objectnative.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/objectnative.cpp.o
.PHONY : objectnative.cpp.o

objectnative.i: objectnative.cpp.i
.PHONY : objectnative.i

# target to preprocess a source file
objectnative.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/objectnative.cpp.i
.PHONY : objectnative.cpp.i

objectnative.s: objectnative.cpp.s
.PHONY : objectnative.s

# target to generate assembly for a file
objectnative.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/objectnative.cpp.s
.PHONY : objectnative.cpp.s

stringbuffer.o: stringbuffer.cpp.o
.PHONY : stringbuffer.o

# target to build an object file
stringbuffer.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/stringbuffer.cpp.o
.PHONY : stringbuffer.cpp.o

stringbuffer.i: stringbuffer.cpp.i
.PHONY : stringbuffer.i

# target to preprocess a source file
stringbuffer.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/stringbuffer.cpp.i
.PHONY : stringbuffer.cpp.i

stringbuffer.s: stringbuffer.cpp.s
.PHONY : stringbuffer.s

# target to generate assembly for a file
stringbuffer.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/stringbuffer.cpp.s
.PHONY : stringbuffer.cpp.s

stringnative.o: stringnative.cpp.o
.PHONY : stringnative.o

# target to build an object file
stringnative.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/stringnative.cpp.o
.PHONY : stringnative.cpp.o

stringnative.i: stringnative.cpp.i
.PHONY : stringnative.i

# target to preprocess a source file
stringnative.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/stringnative.cpp.i
.PHONY : stringnative.cpp.i

stringnative.s: stringnative.cpp.s
.PHONY : stringnative.s

# target to generate assembly for a file
stringnative.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/stringnative.cpp.s
.PHONY : stringnative.cpp.s

system.o: system.cpp.o
.PHONY : system.o

# target to build an object file
system.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/system.cpp.o
.PHONY : system.cpp.o

system.i: system.cpp.i
.PHONY : system.i

# target to preprocess a source file
system.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/system.cpp.i
.PHONY : system.cpp.i

system.s: system.cpp.s
.PHONY : system.s

# target to generate assembly for a file
system.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/system.cpp.s
.PHONY : system.cpp.s

varargsnative.o: varargsnative.cpp.o
.PHONY : varargsnative.o

# target to build an object file
varargsnative.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/varargsnative.cpp.o
.PHONY : varargsnative.cpp.o

varargsnative.i: varargsnative.cpp.i
.PHONY : varargsnative.i

# target to preprocess a source file
varargsnative.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/varargsnative.cpp.i
.PHONY : varargsnative.cpp.i

varargsnative.s: varargsnative.cpp.s
.PHONY : varargsnative.s

# target to generate assembly for a file
varargsnative.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/varargsnative.cpp.s
.PHONY : varargsnative.cpp.s

variant.o: variant.cpp.o
.PHONY : variant.o

# target to build an object file
variant.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/variant.cpp.o
.PHONY : variant.cpp.o

variant.i: variant.cpp.i
.PHONY : variant.i

# target to preprocess a source file
variant.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/variant.cpp.i
.PHONY : variant.cpp.i

variant.s: variant.cpp.s
.PHONY : variant.s

# target to generate assembly for a file
variant.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/variant.cpp.s
.PHONY : variant.cpp.s

windowsruntimebufferhelper.o: windowsruntimebufferhelper.cpp.o
.PHONY : windowsruntimebufferhelper.o

# target to build an object file
windowsruntimebufferhelper.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/windowsruntimebufferhelper.cpp.o
.PHONY : windowsruntimebufferhelper.cpp.o

windowsruntimebufferhelper.i: windowsruntimebufferhelper.cpp.i
.PHONY : windowsruntimebufferhelper.i

# target to preprocess a source file
windowsruntimebufferhelper.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/windowsruntimebufferhelper.cpp.i
.PHONY : windowsruntimebufferhelper.cpp.i

windowsruntimebufferhelper.s: windowsruntimebufferhelper.cpp.s
.PHONY : windowsruntimebufferhelper.s

# target to generate assembly for a file
windowsruntimebufferhelper.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/classlibnative/bcltype/CMakeFiles/bcltype.dir/build.make src/classlibnative/bcltype/CMakeFiles/bcltype.dir/windowsruntimebufferhelper.cpp.s
.PHONY : windowsruntimebufferhelper.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... bcltype"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... __/__/__/version.o"
	@echo "... __/__/__/version.i"
	@echo "... __/__/__/version.s"
	@echo "... arrayhelpers.o"
	@echo "... arrayhelpers.i"
	@echo "... arrayhelpers.s"
	@echo "... arraynative.o"
	@echo "... arraynative.i"
	@echo "... arraynative.s"
	@echo "... console.o"
	@echo "... console.i"
	@echo "... console.s"
	@echo "... currency.o"
	@echo "... currency.i"
	@echo "... currency.s"
	@echo "... decimal.o"
	@echo "... decimal.i"
	@echo "... decimal.s"
	@echo "... number.o"
	@echo "... number.i"
	@echo "... number.s"
	@echo "... oavariant.o"
	@echo "... oavariant.i"
	@echo "... oavariant.s"
	@echo "... objectnative.o"
	@echo "... objectnative.i"
	@echo "... objectnative.s"
	@echo "... stringbuffer.o"
	@echo "... stringbuffer.i"
	@echo "... stringbuffer.s"
	@echo "... stringnative.o"
	@echo "... stringnative.i"
	@echo "... stringnative.s"
	@echo "... system.o"
	@echo "... system.i"
	@echo "... system.s"
	@echo "... varargsnative.o"
	@echo "... varargsnative.i"
	@echo "... varargsnative.s"
	@echo "... variant.o"
	@echo "... variant.i"
	@echo "... variant.s"
	@echo "... windowsruntimebufferhelper.o"
	@echo "... windowsruntimebufferhelper.i"
	@echo "... windowsruntimebufferhelper.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

