# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 2.8

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list

# Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /root/git/coreclr

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /root/git/coreclr/bin/obj/Linux.x64.Debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running interactive CMake command-line interface..."
	/usr/bin/cmake -i .
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: install/local
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: install/strip
.PHONY : install/strip/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(CMAKE_COMMAND) -E cmake_progress_start /root/git/coreclr/bin/obj/Linux.x64.Debug/CMakeFiles /root/git/coreclr/bin/obj/Linux.x64.Debug/src/palrt/CMakeFiles/progress.marks
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/palrt/all
	$(CMAKE_COMMAND) -E cmake_progress_start /root/git/coreclr/bin/obj/Linux.x64.Debug/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/palrt/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/palrt/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/palrt/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
src/palrt/CMakeFiles/palrt.dir/rule:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f CMakeFiles/Makefile2 src/palrt/CMakeFiles/palrt.dir/rule
.PHONY : src/palrt/CMakeFiles/palrt.dir/rule

# Convenience name for target.
palrt: src/palrt/CMakeFiles/palrt.dir/rule
.PHONY : palrt

# fast build rule for target.
palrt/fast:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/build
.PHONY : palrt/fast

__/__/version.o: __/__/version.cpp.o
.PHONY : __/__/version.o

# target to build an object file
__/__/version.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/__/__/version.cpp.o
.PHONY : __/__/version.cpp.o

__/__/version.i: __/__/version.cpp.i
.PHONY : __/__/version.i

# target to preprocess a source file
__/__/version.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/__/__/version.cpp.i
.PHONY : __/__/version.cpp.i

__/__/version.s: __/__/version.cpp.s
.PHONY : __/__/version.s

# target to generate assembly for a file
__/__/version.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/__/__/version.cpp.s
.PHONY : __/__/version.cpp.s

bstr.o: bstr.cpp.o
.PHONY : bstr.o

# target to build an object file
bstr.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/bstr.cpp.o
.PHONY : bstr.cpp.o

bstr.i: bstr.cpp.i
.PHONY : bstr.i

# target to preprocess a source file
bstr.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/bstr.cpp.i
.PHONY : bstr.cpp.i

bstr.s: bstr.cpp.s
.PHONY : bstr.s

# target to generate assembly for a file
bstr.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/bstr.cpp.s
.PHONY : bstr.cpp.s

coguid.o: coguid.cpp.o
.PHONY : coguid.o

# target to build an object file
coguid.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/coguid.cpp.o
.PHONY : coguid.cpp.o

coguid.i: coguid.cpp.i
.PHONY : coguid.i

# target to preprocess a source file
coguid.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/coguid.cpp.i
.PHONY : coguid.cpp.i

coguid.s: coguid.cpp.s
.PHONY : coguid.s

# target to generate assembly for a file
coguid.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/coguid.cpp.s
.PHONY : coguid.cpp.s

comem.o: comem.cpp.o
.PHONY : comem.o

# target to build an object file
comem.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/comem.cpp.o
.PHONY : comem.cpp.o

comem.i: comem.cpp.i
.PHONY : comem.i

# target to preprocess a source file
comem.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/comem.cpp.i
.PHONY : comem.cpp.i

comem.s: comem.cpp.s
.PHONY : comem.s

# target to generate assembly for a file
comem.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/comem.cpp.s
.PHONY : comem.cpp.s

decarith.o: decarith.cpp.o
.PHONY : decarith.o

# target to build an object file
decarith.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/decarith.cpp.o
.PHONY : decarith.cpp.o

decarith.i: decarith.cpp.i
.PHONY : decarith.i

# target to preprocess a source file
decarith.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/decarith.cpp.i
.PHONY : decarith.cpp.i

decarith.s: decarith.cpp.s
.PHONY : decarith.s

# target to generate assembly for a file
decarith.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/decarith.cpp.s
.PHONY : decarith.cpp.s

decconv.o: decconv.cpp.o
.PHONY : decconv.o

# target to build an object file
decconv.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/decconv.cpp.o
.PHONY : decconv.cpp.o

decconv.i: decconv.cpp.i
.PHONY : decconv.i

# target to preprocess a source file
decconv.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/decconv.cpp.i
.PHONY : decconv.cpp.i

decconv.s: decconv.cpp.s
.PHONY : decconv.s

# target to generate assembly for a file
decconv.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/decconv.cpp.s
.PHONY : decconv.cpp.s

guid.o: guid.cpp.o
.PHONY : guid.o

# target to build an object file
guid.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/guid.cpp.o
.PHONY : guid.cpp.o

guid.i: guid.cpp.i
.PHONY : guid.i

# target to preprocess a source file
guid.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/guid.cpp.i
.PHONY : guid.cpp.i

guid.s: guid.cpp.s
.PHONY : guid.s

# target to generate assembly for a file
guid.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/guid.cpp.s
.PHONY : guid.cpp.s

memorystream.o: memorystream.cpp.o
.PHONY : memorystream.o

# target to build an object file
memorystream.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/memorystream.cpp.o
.PHONY : memorystream.cpp.o

memorystream.i: memorystream.cpp.i
.PHONY : memorystream.i

# target to preprocess a source file
memorystream.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/memorystream.cpp.i
.PHONY : memorystream.cpp.i

memorystream.s: memorystream.cpp.s
.PHONY : memorystream.s

# target to generate assembly for a file
memorystream.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/memorystream.cpp.s
.PHONY : memorystream.cpp.s

path.o: path.cpp.o
.PHONY : path.o

# target to build an object file
path.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/path.cpp.o
.PHONY : path.cpp.o

path.i: path.cpp.i
.PHONY : path.i

# target to preprocess a source file
path.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/path.cpp.i
.PHONY : path.cpp.i

path.s: path.cpp.s
.PHONY : path.s

# target to generate assembly for a file
path.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/path.cpp.s
.PHONY : path.cpp.s

unicode.o: unicode.cpp.o
.PHONY : unicode.o

# target to build an object file
unicode.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/unicode.cpp.o
.PHONY : unicode.cpp.o

unicode.i: unicode.cpp.i
.PHONY : unicode.i

# target to preprocess a source file
unicode.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/unicode.cpp.i
.PHONY : unicode.cpp.i

unicode.s: unicode.cpp.s
.PHONY : unicode.s

# target to generate assembly for a file
unicode.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/unicode.cpp.s
.PHONY : unicode.cpp.s

urlpars.o: urlpars.cpp.o
.PHONY : urlpars.o

# target to build an object file
urlpars.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/urlpars.cpp.o
.PHONY : urlpars.cpp.o

urlpars.i: urlpars.cpp.i
.PHONY : urlpars.i

# target to preprocess a source file
urlpars.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/urlpars.cpp.i
.PHONY : urlpars.cpp.i

urlpars.s: urlpars.cpp.s
.PHONY : urlpars.s

# target to generate assembly for a file
urlpars.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/urlpars.cpp.s
.PHONY : urlpars.cpp.s

variant.o: variant.cpp.o
.PHONY : variant.o

# target to build an object file
variant.cpp.o:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/variant.cpp.o
.PHONY : variant.cpp.o

variant.i: variant.cpp.i
.PHONY : variant.i

# target to preprocess a source file
variant.cpp.i:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/variant.cpp.i
.PHONY : variant.cpp.i

variant.s: variant.cpp.s
.PHONY : variant.s

# target to generate assembly for a file
variant.cpp.s:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(MAKE) -f src/palrt/CMakeFiles/palrt.dir/build.make src/palrt/CMakeFiles/palrt.dir/variant.cpp.s
.PHONY : variant.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... palrt"
	@echo "... rebuild_cache"
	@echo "... __/__/version.o"
	@echo "... __/__/version.i"
	@echo "... __/__/version.s"
	@echo "... bstr.o"
	@echo "... bstr.i"
	@echo "... bstr.s"
	@echo "... coguid.o"
	@echo "... coguid.i"
	@echo "... coguid.s"
	@echo "... comem.o"
	@echo "... comem.i"
	@echo "... comem.s"
	@echo "... decarith.o"
	@echo "... decarith.i"
	@echo "... decarith.s"
	@echo "... decconv.o"
	@echo "... decconv.i"
	@echo "... decconv.s"
	@echo "... guid.o"
	@echo "... guid.i"
	@echo "... guid.s"
	@echo "... memorystream.o"
	@echo "... memorystream.i"
	@echo "... memorystream.s"
	@echo "... path.o"
	@echo "... path.i"
	@echo "... path.s"
	@echo "... unicode.o"
	@echo "... unicode.i"
	@echo "... unicode.s"
	@echo "... urlpars.o"
	@echo "... urlpars.i"
	@echo "... urlpars.s"
	@echo "... variant.o"
	@echo "... variant.i"
	@echo "... variant.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /root/git/coreclr/bin/obj/Linux.x64.Debug && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

